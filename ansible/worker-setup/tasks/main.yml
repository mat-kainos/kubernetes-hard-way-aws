---
# tasks file for worker-setup

- name: Setup correct hostname
  hostname: 
    name: "{{ host_name }}"

- name: Apt install dependencies
  tags:
    - current
  apt:
    name: ['unzip', 'socat', 'conntrack', 'ipset']

- name: Create kube, containerd and cni directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/cni/net.d
    - /opt/cni/bin
    - /var/lib/kubelet
    - /var/lib/kube-proxy
    - /var/lib/kubernetes
    - /var/run/kubernetes
    - /etc/containerd

- name: Copy certificates and private keys to the worker
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
    - { src: '{{ output_dir }}/ca.pem', dest: '/var/lib/kubernetes' }
    - { src: '{{ output_dir }}/worker.kubeconfig', dest: '/var/lib/kubelet/kubeconfig' }
    - { src: '{{ output_dir }}/worker-key.pem', dest: '/var/lib/kubelet/' }
    - { src: '{{ output_dir }}/worker.pem', dest: '/var/lib/kubelet/' }
    - { src: '{{ output_dir }}/kube-proxy.kubeconfig', dest: '/var/lib/kube-proxy/kubeconfig' }
    - { src: 'binaries/runsc', dest: '/usr/local/bin/runsc' }
  


- name: Download kubernetes worker binaries
  tags:
    - current
  get_url:
    url: "{{ item }}"
    dest: /
    remote_src: yes
  with_items:
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kubectl
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kube-proxy
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kubelet
    - https://github.com/opencontainers/runc/releases/download/v1.0.0-rc8/runc.amd64



- name: Download and unarchive crictl, cni plugins and containerd
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    remote_src: yes
  with_items:
    - { src: 'https://github.com/containerd/containerd/releases/download/v1.2.6/containerd-1.2.6.linux-amd64.tar.gz', dst: '/' }
    - { src: 'https://github.com/containernetworking/plugins/releases/download/v0.8.1/cni-plugins-linux-amd64-v0.8.1.tgz', dst: '/opt/cni/bin/' }
    - { src: 'https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.14.0/crictl-v1.14.0-linux-amd64.tar.gz', dst: '/usr/local/bin/' }
    
- name: Copy kubernetes worker binaries to bin folder
  copy: 
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: '+x'
    remote_src: yes
  with_items:
    - { src: '/kube-proxy', dest: '/usr/local/bin/' }
    - { src: '/kubectl', dest: '/usr/local/bin/' }
    - { src: '/kubelet', dest: '/usr/local/bin/' }
    - { src: '/runc.amd64', dest: '/usr/local/bin/runc' }
  

- name: Register subnet id from local terraform output
  tags:
    -  current
  local_action: shell terraform output subnet_id chdir="{{ playbook_dir }}/../terraform"
  become: no
  register: terraform_subnet_id

- name: Register subnet cidr from local terraform output
  tags:
    -  current
  local_action: shell terraform output subnet_id chdir="{{ playbook_dir }}/../terraform"
  become: no
  register: terraform_subnet_cidr

- name: Register vpc cidr from local terraform output
  local_action: shell terraform output vpc_cidr chdir="{{ playbook_dir }}/../terraform"
  become: no
  register: terraform_vpc_cidr

- name: Template and copy 10-bridge.conf
  template:
    src: templates/10-bridge.tpl
    dest: /etc/cni/net.d/10-bridge.conf

- name: Copy 99-loopback.conf
  copy: 
    src: files/99-loopback.conf
    dest: /etc/cni/net.d/

- name: Copy containerd conf
  copy: 
    src: files/containerd.config.toml
    dest: /etc/containerd/config.toml


- name: Copy containerd service
  copy: 
    src: files/containerd.service
    dest: /etc/systemd/system/containerd.service
    

- name: Template and copy kubelet service
  tags:
    -  current
  template:
    src: templates/kubelet.service.tpl
    dest: /etc/systemd/system/kubelet.service

- name: Template and copy kube proxy service
  template:
    src: templates/kube-proxy.service.tpl
    dest: /etc/systemd/system/kube-proxy.service

- name: Template and copy kubelet config
  tags:
    -  current
  template:
    src: templates/kubelet-config.yaml.tpl
    dest: /var/lib/kubelet/kubelet-config.yaml


- name: Start and enable containerd, kube proxy and kubelet service
  tags:
    -  current
  systemd:
    name: "{{ item }}"
    state: started
    enabled: yes
    daemon_reload: yes
  with_items:
    - containerd
    - kubelet
    - kube-proxy