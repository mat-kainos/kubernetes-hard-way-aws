---
# tasks file for controller-setup
- name: Setup correct hostname
  hostname: 
    name: "{{ host_name }}"

- name: Update repositories cache then install unzip and python3-pip
  apt:
    name: ['unzip', 'python3-pip']
    update_cache: yes

- name: Install OpenShift Python client for k8s ansible module
  pip:
    name: openshift

- name: Copy certificates, private keys and secret to the controller
  copy: src={{ item }} dest=/var/lib/kubernetes/
  with_items:
    - '{{ output_dir }}/ca.pem'
    - '{{ output_dir }}/ca-key.pem'
    - '{{ output_dir }}/kubernetes-key.pem'
    - '{{ output_dir }}/kubernetes.pem'
    - '{{ output_dir }}/encryption-config.yaml'
    - '{{ input_dir }}/rbac.yaml'


- name: Download and unarchive etcd 3.3.13
  unarchive:
    src: https://github.com/coreos/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-amd64.tar.gz
    dest: /
    remote_src: yes

- name: Copy etcd execs to bin folder
  copy: 
    src: /etcd-v3.3.13-linux-amd64/{{ item }} 
    dest: /usr/local/bin/
    mode: '+x'
    remote_src: yes
  with_items:
    - etcd
    - etcdctl

- name: Create etcd directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /etc/etcd
    - /var/lib/etcd

- name: Copy ca and kube keys to etcd
  copy: src={{ item}} dest=/etc/etcd/
  with_items:
    - '{{ output_dir }}/ca.pem'
    - '{{ output_dir }}/kubernetes-key.pem'
    - '{{ output_dir }}/kubernetes.pem'


- name: Template and copy etcd systemd service unit file
  template:
    src: templates/etcd.service.tpl
    dest: /etc/systemd/system/etcd.service

- name: Start and enable service etcd
  systemd:
    name: etcd
    state: started
    enabled: yes
    daemon_reload: yes


- name: Download kubernetes controller binaries
  get_url:
    url: "{{ item }}"
    dest: /
    remote_src: yes
  with_items:
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kube-apiserver
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kube-controller-manager
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kube-scheduler
    - https://storage.googleapis.com/kubernetes-release/release/v1.14.1/bin/linux/amd64/kubectl


- name: Copy kubernetes execs to bin folder
  copy: 
    src: "/{{ item }}"
    dest: /usr/local/bin/
    mode: '+x'
    remote_src: yes
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - kubectl


- name: Register subnet cidr from local terraform output
  local_action: shell terraform output subnet_cidr chdir="{{ playbook_dir }}/../terraform"
  become: no
  register: terraform_subnet_cidr

- name: Register vpc cidr from local terraform output
  local_action: shell terraform output vpc_cidr chdir="{{ playbook_dir }}/../terraform"
  become: no
  register: terraform_vpc_cidr


- name: Template and copy kube-apiserver systemd service unit file
  template:
    src: templates/kube-apiserver.service.tpl
    dest: /etc/systemd/system/kube-apiserver.service


- name: Start and enable service kube-apiserver
  systemd:
    name: kube-apiserver
    state: started
    enabled: yes
    daemon_reload: yes

- name: Template and copy kube controller manager systemd service unit file
  template:
    src: templates/kube-controller-manager.service.tpl
    dest: /etc/systemd/system/kube-controller-manager.service


- name: Start and enable service kube-controller-manager
  systemd:
    name: kube-controller-manager
    state: started
    enabled: yes
    daemon_reload: yes

- name: Copy kube scheduler systemd service unit file
  copy: 
    src: files/kube-scheduler.service
    dest: /etc/systemd/system/kube-scheduler.service

- name: Apply rbac role and binding
  shell: kubectl apply -f rbac.yaml
  args:
    chdir: /var/lib/kubernetes/